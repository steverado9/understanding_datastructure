An array is a special variable, which can hold more than one value
An array can hold many values under a single name, and you can access the values by referring to an index number.
Array's are special type of objects 
Arrays can hold any type of data type
     
    Creating an array
1)using array literals
2)using the javascript new keyword
    
    Assessing array elements
This can be done using their indexes(position)
in javascript, array indexes start from zero(0)
    
    Nested Arrays and Objects
Values in objects can be arrays, and values in arrays can be objects:
    
    changing elements in an array
You can change elements in an array using the index

    Array methods
1)Array.isArray(variable) : This is used to check if a vriable is an array
2)type of: This is used to check for the data type of an element
3)The length Property: This is used to measure the size of an array
4)at(): This method returns an indexed element from an array
5)toString(): This method converts an array to a toString  of (comma separated) array values.
6)join(): The join() method also joins all array elements into a string
It behaves just like toString(), but in addition you can specify the separator
7)push() : this is used to add items from the end of an array 
8)pop(): This is used to remove the last item in an array
9)unshift(): The unshift() method adds a new element to an array (at the beginning), and "unshifts" older elements.
10)shift(): This is used to remove the first item in an array and "shifts" all other elements to a lower index.
11)concat(): The concat() method creates a new array by merging (concatenating) existing arrays
12)copyWithin():This method copies array elements to another position in an array
13)flat():  This method creates a new array with sub-array elements concatenated to a specified depth
14)flatMap(): This method first maps all elements of an array and then creates a new array by flattening the array
15)splice(para1, para2):This method adds new items to an array.
The first parameter defines the position where new elements should be added (spliced in).
The second parameter defines how many elements should be removed.
With clever parameter setting, you can use splice() to remove elements without leaving "holes" in the array
16)toSpliced(): creates a new array, keeping the original array unchanged, 
while the old splice() method altered the original array.
17)slice(para): This method slices out a piece of an array into a new array
This method can take one arguement or
This method can take two arguments
The method then selects elements from the start argument, and up to (but not including) the end argument.
    ArraySearchMethod
18)indexOf(): This method searches an array for an element value and returns its position
-you can specify the start position for the search(optional)
-returns -1 if the element is not found
-If the item is present more than once, it returns the position of the first occurrence
19)lastIndexOf(): lastIndexOf() is the same as indexOf() 
but returns the position of the last occurrence of the specified element.
20)includes(): This allows us to check if an element is present in an array
21)find():This method returns the value of the first array element that passes a condition(test)
22)findIndex(): method returns the index of the first array element that passes a condition(test)
23)findLast(): this method will start from the end of an array and return the value of the first element that satisfies a condition.
24) findLastIndex(): This method finds the index of the last element that satisfies a condition
    ArraySortMethods
25)sort(): This method sorts an array alphabetically
26)reverse(): This method reverses the elements in an array:
27)toSorted(): This method is a safe way to sort an array without altering the original array
28)toReversed(): This method is a safe way to reverse an array without altering the original array
29)Numeric Sort
-If numbers are sorted as strings, "25" is bigger than "100", because "2" is bigger than "1".
-Because of this, the sort() method will produce incorrect result when sorting numbers.
-You can fix this by providing a compare function:
30)The Fisher Yates Method
The points.sort() method in the example above is not accurate. It will favor some numbers over others.
The most popular correct method, is called the Fisher Yates shuffle

Looping(iterating) through an array
1)for Loop: This is used to iterate through an array
2)forEach : This method calls a function for each of the elements in an array
3)map()
    
